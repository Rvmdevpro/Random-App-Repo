{"ast":null,"code":"var _jsxFileName = \"/Users/rubenvelez/ReactProject/random-app/src/Components/Characters.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Characters() {\n  _s();\n\n  const [people, setPeople] = useState([]);\n\n  const fetchPeople = async () => {\n    const response = await fetch(\"https://randomuser.me/api/?results=5\");\n    return response.json();\n  };\n\n  const {\n    data,\n    status\n  } = useQuery(\"people\", fetchPeople);\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: people.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: person.name.first\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Characters, \"4t5ZIaTqnSAZZvyzv0Gf1R2Ttx8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"names":["React","useState","useEffect","useQuery","Characters","people","setPeople","fetchPeople","response","fetch","json","data","status","map","person","name","first"],"sources":["/Users/rubenvelez/ReactProject/random-app/src/Components/Characters.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {useQuery} from \"react-query\"\nimport { ResultsEntity } from './RandomUserInterface';\n\n\nexport default function Characters() {\n   \n        const [people, setPeople] = useState([])\n\n        \n        const fetchPeople  = async () => {\n        const response = await fetch (\"https://randomuser.me/api/?results=5\")\n        return response.json();\n        \n\n\n    };\n        const{data,status}= useQuery(\"people\", fetchPeople)\n\n    useEffect(() => {\n          fetchPeople();\n        },[]);\n    return (\n\n      <div>\n       {people.map((person:ResultsEntity)=>(\n         <div>{person.name.first}</div>\n       ))}\n      </div>\n    )\n  }\n  \n  \n\n\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAIA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EAE7B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;EAGA,MAAMM,WAAW,GAAI,YAAY;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAF,CAA5B;IACA,OAAOD,QAAQ,CAACE,IAAT,EAAP;EAIH,CANG;;EAOA,MAAK;IAACC,IAAD;IAAMC;EAAN,IAAeT,QAAQ,CAAC,QAAD,EAAWI,WAAX,CAA5B;EAEJL,SAAS,CAAC,MAAM;IACVK,WAAW;EACZ,CAFI,EAEH,EAFG,CAAT;EAGA,oBAEE;IAAA,UACEF,MAAM,CAACQ,GAAP,CAAYC,MAAD,iBACV;MAAA,UAAMA,MAAM,CAACC,IAAP,CAAYC;IAAlB;MAAA;MAAA;MAAA;IAAA,QADD;EADF;IAAA;IAAA;IAAA;EAAA,QAFF;AAQD;;GAzBqBZ,U;UAYID,Q;;;KAZJC,U"},"metadata":{},"sourceType":"module"}